cstruct-stubgen
===============

``cstruct-stubgen`` is a tool that generates Python stub files (``.pyi``) from ``dissect.cstruct`` definitions.
These stubs are useful for improving IDE support, enabling type checking, and enhancing developer experience when working with cstructs with code completion.

The most basic usage of ``cstruct-stubgen`` is as simple as:

.. code-block:: console

   $ cstruct-stubgen /path/to/project/source/files

So in the case of the following cstruct definition:

.. code-block:: python

   from dissect.cstruct import cstruct

   c_systemtime_def = """
   struct SYSTEMTIME {
       WORD    wYear;
       WORD    wMonth;
       WORD    wDayOfWeek;
       WORD    wDay;
       WORD    wHour;
       WORD    wMinute;
       WORD    wSecond;
       WORD    wMilliseconds;
   };
   """
   c_systemtime = cstruct().load(c_systemtime_def)

The generated ``.pyi`` file will look like:

.. code-block:: python

   # Generated by cstruct-stubgen
   from typing import BinaryIO, Literal, overload

   import dissect.cstruct as __cs__
   from typing_extensions import TypeAlias

   class _c_systemtime(__cs__.cstruct):
       class SYSTEMTIME(__cs__.Structure):
           wYear: _c_systemtime.uint16
           wMonth: _c_systemtime.uint16
           wDayOfWeek: _c_systemtime.uint16
           wDay: _c_systemtime.uint16
           wHour: _c_systemtime.uint16
           wMinute: _c_systemtime.uint16
           wSecond: _c_systemtime.uint16
           wMilliseconds: _c_systemtime.uint16
           @overload
           def __init__(self, wYear: _c_systemtime.uint16 | None = ..., wMonth: _c_systemtime.uint16 | None = ..., wDayOfWeek: _c_systemtime.uint16 | None = ..., wDay: _c_systemtime.uint16 | None = ..., wHour: _c_systemtime.uint16 | None = ..., wMinute: _c_systemtime.uint16 | None = ..., wSecond: _c_systemtime.uint16 | None = ..., wMilliseconds: _c_systemtime.uint16 | None = ...): ...
           @overload
           def __init__(self, fh: bytes | memoryview | bytearray | BinaryIO, /): ...

   # Technically `c_systemtime` is an instance of `_c_systemtime`, but then we can't use it in type hints
   c_systemtime: TypeAlias = _c_systemtime


Usage
-----

.. sphinx_argparse_cli::
   :module: dissect.cstruct.tools.stubgen
   :func: main
   :prog: cstruct-stubgen
   :hook:

